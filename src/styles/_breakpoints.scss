// Breakpoint variables
$breakpoints: (
  'mobile': 320px,
  'tablet': 768px,
  'laptop': 1024px,
  'desktop': 1440px
);

// Mixin for min-width (mobile first approach)
@mixin respond-above($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $breakpoint-value: map-get($breakpoints, $breakpoint);
    @media (min-width: $breakpoint-value) {
      @content;
    }
  } @else {
    @warn "Breakpoint `#{$breakpoint}` not found in `$breakpoints` map.";
  }
}

// Mixin for max-width
@mixin respond-below($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $breakpoint-value: map-get($breakpoints, $breakpoint);
    @media (max-width: calc(#{$breakpoint-value} - 1px)) {
      @content;
    }
  } @else {
    @warn "Breakpoint `#{$breakpoint}` not found in `$breakpoints` map.";
  }
}

// Mixin for a specific range
@mixin respond-between($lower, $upper) {
  @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {
    $lower-breakpoint: map-get($breakpoints, $lower);
    $upper-breakpoint: map-get($breakpoints, $upper);
    @media (min-width: $lower-breakpoint) and (max-width: calc(#{$upper-breakpoint} - 1px)) {
      @content;
    }
  } @else {
    @warn "Breakpoints `#{$lower}` or `#{$upper}` not found in `$breakpoints` map.";
  }
}